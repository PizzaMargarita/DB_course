INSERT INTO student(name,surmane,n_group,date_birth,city,email,score) VALUES
('Виктор','Мозгачёв','2281','2003.03.08','Псков', 'ZXcxzc@gmail.com', 5),
('Александра', 'Романова', '2282', '2003.03.29', 'Чебоксары', 'alex@example.com', 5),
('Мария', 'Петрова', '5678', '2000.05.05', 'Санкт-Петербург', 'mary@example.com', 3.7),
('Дмитрий', 'Кузнецов', '6789', '2003.03.03', 'Краснодар', 'dmitry@example.com', 3.9),
('Ольга', 'Тихонова', '1234', '2003.09.15', 'Самара', 'olga@example.com', 4.6),
('Артем', 'Михайлов', '5678', '2003.03.05', 'Новосибирск', 'artem@example.com', 3.5),
('Елена', 'Калинина', '9101', '2003.11.12', 'Ростов-на-Дону', 'elena@example.com', 4.6),
('Максим', 'Федоров', '2345', '2003.04.12', 'Уфа', 'max@example.com', 4.9),
('Илья', 'Сидоров', '9101', '2003.02.28', 'Казань', 'ilya@example.com', 4.6),
('Анна', 'Смирнова', '2345', '2003.04.01', 'Екатеринбург', 'anna@example.com', 4.8),
('Анна', 'Петрова', '2325', '2003.04.01', 'Екатеринбург', null, 4.8),
('Анна', 'Сидорова', '2315', '2003.04.01', 'Екатеринбург', null, 4.8);



Select *
from student;

Select *
from student
WHERE (score > 4.5 and score <=5);

Select *
from student
WHERE(score between 4.5 and 5)

— Познакомиться с функцией CAST. Вывести при помощи неё студентов заданного курса (использовать Like)

Select *
from student
WHERE CAST(n_group as text) LIKE '2%';

--Вывести всех студентов, отсортировать по убыванию номера группы и имени от а до я

Select *
from student
ORDER BY n_group DESC, name;


--Вывести студентов, средний балл которых больше 4 и отсортировать по баллу от большего к меньшему

Select *
from student
WHERE(score > 4)
ORDER BY score DESC;

--Вывести на экран название и риск 2-х хобби (на своё усмотрение)
Select name,risk
from hobby
LIMIT 2;
--Вывести студентов, средний балл которых больше 4.5 и отсортировать по баллу от большего к меньшему

Select *
from student
WHERE(score > 4.5)
ORDER BY score DESC;

--Из запроса №7 вывести несколькими способами на экран только 5 студентов с максимальным баллом

Select *
from student
WHERE(score > 4.5)
ORDER BY score DESC
LIMIT 5;

--Выведите хобби и с использованием условного оператора сделайте риск словами:

Select name,
CASE
WHEN risk >= 8 THEN 'Очень высокий'
WHEN risk >= 6 and risk < 8 THEN 'Высокий'
WHEN risk >=4 and risk < 6 THEN 'Средний'
WHEN risk >= 2 and risk < 4 THEN 'Низкий'
When risk < 2 THEN 'Очень Низкий'
ELSE 'Мы точно никогда не выведем это сообщение'
End risk_category
from hobby;

--Вывести 3 хобби с максимальным риском

Select *
from hobby 
ORDER BY risk DESC 
LIMIT 3;

--Вывести id_hobby и id_student которые начали заниматься хобби между двумя заданными датами (выбрать самим) и студенты должны до сих пор заниматься хобби
